[
    {
        "name": "Community Calendar",
        "description": "A portal tailored to the needs of neighborhoods and small community groups.  Cut through the noise of crowded social media sites and discover events that have been in your neighborhood this entire time.",
        "tech": "React, Node.js, Auth0, GraphQL, Apollo Client/Server, Prisma, PostgreSQL",
        "demo": "https://cc-production.netlify.app",
        "frontend": "https://github.com/markpkng/community-calendar-fe",
        "backend": "https://github.com/markpkng/community-calendar-be",
        "images": [
            "ourcommunitycal1.png",
            "ourcommunitycal2.png",
            "ourcommunitycal3.png",
            "ourcommunitycal4.png",
            "ourcommunitycal5.png",
            "ourcommunitycal6.png",
            "ourcommunitycal7.png"
        ],
        "imageQuery": "ourcommunitycal",
        "frequency": 1,
        "bullets": [
            "Developed a full stack application and collaborated on a cross-functional team that included 5 web developers, 4 native mobile developers, and 1 UX designer.",
            "Communicated remotely using Slack/Zoom and attended daily stand-up meetings to talk about daily project goals, features, and blockers.",
            "Deployed a Node.js Apollo GraphQL backend on Heroku with 14 resolvers for CRUD functionality to minimize redundancy of data fetched through API calls.",
            "Designed PostgreSQL database schema for users, events, locations, organizations, and neighborhoods with Prisma.",
            "Implemented server-side searching through 1 query resolver; allowing users to filter events by GPS proximity, date range, keywords, tags, and price utilizing a Porter Stemming algorithm and Turf.js.",
            "Integrated Auth0 for single sign on capabilities; granting users the ability to login/register with Google, Facebook, and email.",
            "Developed frontend web application using React, Webpack, SASS, and Apollo Client for precise state management and caching."
        ]
    },
    {
        "name": "Dev Desk",
        "description": "React-based web application that allows users to open tickets and ask questions related to programming. Users can upload images and videos to help ask or answer questions, and responses are shown in organized threads. Includes an integrated Slack bot that allows users to easily see, open, and answer tickets from Slack.",
        "tech": "React, Redux, Node.js/Express, PostgreSQL, Slack API",
        "demo": "https://devdesk2.now.sh/",
        "backend": "https://github.com/markpkng/DevDesk-Backend",
        "images": [
            "devdesk1.png",
            "devdesk2.png",
            "devdesk3.png",
            "devdesk4.png",
            "devdesk5.png"
        ],
        "imageQuery": "devdesk",
        "frequency": 1,
        "bullets": [
            "Produced a REST API with 40+ endpoints using Node.js, Express.js, and PostgreSQL, and modeled database schema/migrations using Knex.js for users, tickets, comments, and replies.",
            "Combined JSON Web Tokens and Bcrypt to authenticate users and hash passwords.",
            "Defined endpoints allowing users to simultaneously upload images/videos with Express-fileupload and Cloudinary.",
            "Integrated Slack API to create a bot that allows users to easily see, open, and answer tickets from Slack."
        ]
    },
    {
        "name": "Create Your Own Adventure",
        "tech": "React, Node.js/Express, PostgreSQL",
        "description": "This project was selected \"Best Overall\" out of 30+ teams for Lambda School's 2020 30-hour Winter Hackathon. Users can access a graphical node interface to create, collaborate, and share interactive stories with other users.",
        "demo": "https://createadventure.netlify.com/",
        "backend": "https://github.com/Lambda-Hackathon-2020-Git-Adventure/Git-Adventure-Backend",
        "images": [
            "createyouradventure1.png",
            "createyouradventure2.png",
            "createyouradventure3.png",
            "createyouradventure4.png"
        ],
        "imageQuery": "createyouradventure",
        "frequency": 1,
        "bullets": [
            "Collaborated with 7 other developers for 24+ hours.",
            "Developed and deployed backend API and PostgreSQL database on Heroku.",
            "Integrated authentication using bcrypt and JSON Web Tokens.",
            "Implemented SQL transactions and necessary endpoints for users to create story graphs and collaborate with others.",
            "Ate a ton of Chinese food!"
        ]
    },
    {
        "name": "Ride For Life",
        "description": "An \"Uber-like\" application designed for pregnant women in Uganda.  Riders can request rides to nearby health facilities from available drivers.  Drivers can be notified by text messages.",
        "tech": "React, Redux, Node.js/Express, PostgreSQL",
        "demo": "https://rfl.netlify.com/",
        "frontend": "https://github.com/RideforLife/FrontEnd",
        "images": [
            "rideforlife1.png",
            "rideforlife2.png",
            "rideforlife3.png",
            "rideforlife4.png",
            "rideforlife5.png"
        ],
        "imageQuery": "rideforlife",
        "frequency": 1,
        "bullets": [
            "Built a React web application using Redux and Thunk middleware to centralize and simplify state management with 30+ reducers.",
            "Sent and retrieved data, and authenticated with Node.js/Express.js API using Axios.",
            "Incorporated JSON Web Tokens and local storage to store encrypted user information on the client-side."
        ]
    },
    {
        "name": "The Legend of Fnu",
        "description": "An online multiplayer dungeon game for Android/iOS. It utilizes websockets for chat and live player movement.  The game world map and room connections can be reset and randomly generated.",
        "tech": "React Native, Django, PostgreSQL",
        "frontend": "https://github.com/winning-team/react-native-frontend",
        "backend": "https://github.com/winning-team/backend",
        "images": [
            "mobilelegendoffnu1.png",
            "mobilelegendoffnu2.png",
            "mobilelegendoffnu3.png",
            "mobilelegendoffnu4.png",
            "mobilelegendoffnu5.png",
            "mobilelegendoffnu6.png",
            "mobilelegendoffnu7.png"
        ],
        "imageQuery": "legendoffnu",
        "frequency": 2,
        "bullets": [
            "Led a team with 2 other developers to produce an Android and iOS mobile application using React Native.",
            "Developed a Python Django API backend utilizing REST architectural patterns, Django authentication, and PostgreSQL for game state and data persistence.",
            "Implemented Pusher and web sockets for live chat and player movement.",
            "Designed an algorithm to randomly generate and connect any specified amount of rooms in the game world."
        ]
    },
    {
        "name": "Empowered Conversation",
        "description": "A user can send an anonymous text message to someone with materials to prepare them for a difficult conversation.  When the recipient has completed viewing the educational materials, the user will be notified that the recipient is ready to have a conversation.",
        "tech": "React, Node.js/Express, Twilio",
        "demo": "https://empoweredconversation-bw.netlify.com/",
        "frontend": "https://github.com/Build-Week-Empowered-Conversations/Front-End",
        "images": [
            "empoweredconversation1.png",
            "empoweredconversation2.png",
            "empoweredconversation3.png",
            "empoweredconversation4.png",
            "empoweredconversation5.png"
        ],
        "imageQuery": "empoweredconversation",
        "frequency": 1,
        "bullets": [
            "Developed a React application in coordination with 1 backend developer, 2 frontend developers, and 1 UX designer.",
            "Implemented form validation using Formik and Yup.",
            "Created animations using GreenSock."
        ]
    }
]
